ACADEMIC_YEAR_ADD = Insert into academic_year(code, name, date_start, date_end, academic_program_codes, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?);
ACADEMIC_YEAR_UPDATE = Update academic_year set code =?, name = ?, date_start = ?, date_end = ?, academic_program_codes = ?, updated_by = ?, updated_timestamp = ? where id = ?;
ACADEMIC_YEAR_DELETE = Delete from academic_year where id = ?;
ACADEMIC_YEAR_LIST = Select id, code, name, date_start, date_end, academic_program_codes, added_by, added_timestamp, updated_by, updated_timestamp from academic_year order by code desc;
ACADEMIC_YEAR_LAST_CODE = Select id, code, name, date_start, date_end, academic_program_codes from academic_year order by code desc limit 1;
ACADEMIC_YEAR_LIST_SEARCHBY_NAME = Select id, code, name, date_start, date_end, academic_program_codes from academic_year where name like ?;

COURSE_ADD = Insert into course (code, description, credit_unit, pay_unit, lecture_hour, laboratory_hour, course_group_code, academic_program_codes, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
COURSE_UPDATE = Update course set code = ?, description = ?, credit_unit = ?, pay_unit = ?, lecture_hour = ?, laboratory_hour = ?, course_group_code = ?, academic_program_codes = ?, updated_by = ?, updated_timestamp = ? where id = ?;
COURSE_DELETE = Delete from course where id = ?;
COURSE_BY_CODE = Select id, code, description, credit_unit, pay_unit, lecture_hour, laboratory_hour, course_group_code, academic_program_codes from course where code = ?;
COURSE_LIST = Select id, code, description, credit_unit, pay_unit, lecture_hour, laboratory_hour, course_group_code, academic_program_codes from course order by code;
COURSE_LIST_SEARCHBY_CODEDESCRIPTION = Select id, code, description, credit_unit, pay_unit, lecture_hour, laboratory_hour, course_group_code, academic_program_codes from course where code like ? or description like ? order by code;
COURSE_LIST_SEARCHBY_PROGRAMGROUPCODE = Select id, code, description, credit_unit, pay_unit, lecture_hour, laboratory_hour, course_group_code, academic_program_codes from course where program_group_codes like ? order by code;

SEMESTER_ADD = Insert into semester (code, academic_year_code, name, date_start, date_end, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?);
SEMESTER_UPDATE = Update semester set academic_year_code = ?, name = ?, date_start = ?, date_end = ?, updated_by = ?, updated_timestamp = ? where id = ?;
SEMESTER_DELETE = Delete from semester where id = ?
SEMESTER_LAST = Select id, code, academic_year_code, name, date_start, date_end from semester order by code desc limit 1;
SEMESTER_BY_NAME = Select id, code, academic_year_code, name, date_start, date_end from semester where name = ?;
SEMESTER_BY_CODE = Select id, code, academic_year_code, name, date_start, date_end from semester where code = ?;
SEMESTER_BY_ACADEMICYEARNAME = Select id, code, academic_year_code, name, date_start, date_end from semester where academic_year_code = ? and name = ?;
SEMESTER_BY_DATEENDDATESTART = Select id, code, academic_year_code, name, date_start, date_end from semester where date_start = ? and date_end = ?;
SEMESTER_LIST = Select id, code, academic_year_code, name, date_start, date_end from semester order by code;
SEMESTER_LIST_SEARCHBY_NAME = Select id, code, academic_year_code, name, date_start, date_end from semester where name like ?;

FEE_ADD = Insert into fee (code, code_parent, name, academic_program_codes, is_Mandatory, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?);
FEE_UPDATE = Update fee set code_parent = ?, name = ?, academic_program_codes = ?, is_Mandatory = ?, updated_by = ?, updated_timestamp = ? where id = ?;
FEE_DELETE = Delete from fee where id = ?;
FEE_LAST = Select id, code, code_parent, name, academic_program_codes, is_Mandatory from fee order by code desc limit 1;
FEE_LIST = Select id, code, code_parent, name, academic_program_codes, is_Mandatory from fee order by code_parent;
FEE_BY_CODE = Select id, code, code_parent, name, academic_program_codes, is_Mandatory from fee where code = ?;
FEE_BY_NAME = Select id, code, code_parent, name, academic_program_codes, is_Mandatory from fee where name = ?;
FEE_LIST_SEARCHBY_NAME = Select id, code, code_parent, name, academic_program_codes, is_Mandatory from fee where name like ? order by name;

STUDENT_ADD = Insert into student (user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
STUDENT_LIST = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials from student order by user_code desc;
STUDENT_BY_CODE = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials from student where user_code = ?;



STUDENT_UPDATE = Update student set user_code=? ,learner_reference_number=? ,academic_program_code=? ,skills=? ,elementary_school_code_completed_at=? ,elementary_school_graduated_year=? ,junior_high_school_code_completed_at=? ,junior_high_school_graduated_year=? ,senior_high_school_code_completed_at=? ,senior_high_school_graduated_year=? ,vocational_school_code_completed_at=? ,vocational_school_graduated_year=? ,college_school_code_completed_at=? ,college_school_graduated_year=? ,graduate_school_code_completed_at=? ,graduate_school_graduated_year=? ,school_code_last_attended_at=? ,school_last_attended_year=? ,highest_educational_attainment=? ,highest_educational_attainment_major=?, entrance_credentials=?, updated_by=?, updated_timestamp=? where id = ?;
STUDENT_DELETE = Delete from student where id = ?;
STUDENT_LAST = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials, added_by, added_timestamp, updated_by ,updated_timestamp from student where right(user_code, 2) = ? order by user_code desc limit 1;
STUDENT_LAST_BCC = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials, added_by, added_timestamp, updated_by ,updated_timestamp from student order by right(user_code, 5) desc limit 1;
STUDENT_LAST_FAST = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials, added_by, added_timestamp, updated_by ,updated_timestamp from student order by right(user_code, 4) desc limit 1;
STUDENT_LAST_FBC = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials, added_by, added_timestamp, updated_by ,updated_timestamp from student where right(user_code, 2) = ? order by user_code desc limit 1;
STUDENT_LIST_SEARCHBY_ACADEMICPROGRAMCODE = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials, added_by, added_timestamp, updated_by ,updated_timestamp from student where academic_program_code like ? order by user_code asc;
STUDENT_ADD_PROFILE_PICT = insert into laponhcet_media.user (user.code, user.profile_pict, user.added_by, user.added_timestamp, user.updated_by, user.updated_timestamp) values (?, ?, ?, ?, ?, ?);
STUDENT_UPDATE_PROFILE_PICT  = Update from laponhcet_media.user set user.profile_pict = ? where code = ?;
STUDENT_DELETE_PROFILE_PICT  = Delete from laponhcet_media.user where code = ?;
STUDENT_PROFILE_PICT_BY_CODE = Select * from laponhcet_media.user where code = ?;

USER_RFID_ADD = Insert into user_rfid (user_code, profile_pict, rfid, last_name, first_name, middle_name, prefix_name, suffix_name, other_title, gender, cp_number, contact_cp_number, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
USER_RFID_BY_RFID = Select id, user_code, profile_pict, rfid, last_name, first_name, middle_name, prefix_name, suffix_name, other_title, gender, cp_number, contact_cp_number from user_rfid where rfid = ?;
USER_RFID_LIST = Select id, user_code, profile_pict, rfid, last_name, first_name, middle_name, prefix_name, suffix_name, other_title, gender, cp_number, contact_cp_number from user_rfid where length(rfid)=10 and rfid!='9999999999' order by last_name, first_name, middle_name;

FEE_STUDENT_SPECIFIC_ADD = Insert into fee_student_specific (academic_year_code, semester_code, student_code, fee_code, amount, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?);
FEE_STUDENT_SPECIFIC_UPDATE = Update fee_student_specific set academic_year_code = ?, semester_code = ?, student_code = ?, fee_code = ?, amount = ?, updated_by = ?, updated_timestamp = ? where id = ?;
FEE_STUDENT_SPECIFIC_DELETE = Delete from fee_student_specific where id = ?;
FEE_STUDENT_SPECIFIC_LIST = Select id, academic_year_code, semester_code, student_code, fee_code, amount from fee_student_specific;
FEE_STUDENT_SPECIFIC_LIST_BY_STUDENTCODE = Select id, academic_year_code, semester_code, student_code, fee_code, amount from fee_student_specific where student_code = ?;
FEE_STUDENT_SPECIFIC_LIST_BY_STUDENTACADEMICYEAR = Select id, academic_year_code, semester_code, student_code, fee_code, amount from fee_student_specific where student_code = ? and academic_year_code = ?;
FEE_STUDENT_SPECIFIC_LIST_BY_STUDENTSEMESTER = Select id, academic_year_code, semester_code, student_code, fee_code, amount from fee_student_specific where student_code = ? and semester_code = ?;
FEE_STUDENT_SPECIFIC_LIST_SEARCHBY_STUDENT = Select id, academic_year_code, semester_code, student_code, fee_code, amount from fee_student_specific where student_code like ?;


SCHOOL_ADD = Insert into school (code, name, address1, address2, city_code, registrar_oic, website, contact_number, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
SCHOOL_UPDATE = Update school set name = ?, address1 = ?, address2 = ?, city_code = ?, registrar_oic = ?, website = ?, contact_number = ?, updated_by = ?, updated_timestamp = ? where id = ?;
SCHOOL_DELETE = Delete from school where id = ?;
SCHOOL_LAST = Select id, code, name, address1, address2, city_code, registrar_oic, website, contact_number from school order by code desc limit 1;
SCHOOL_BY_NAME = Select id, code, name, address1, address2, city_code, registrar_oic, website, contact_number from school where name = ?;
SCHOOL_LIST = Select id, code, name, address1, address2, city_code, registrar_oic, website, contact_number from school order by name;
SCHOOL_LIST_SEARCHBY_NAME = Select id, code, name, address1, address2, city_code, registrar_oic, website, contact_number from school where name like ?;

STAFF_ADD = Insert into staff (user_code, program_graduated, job_role, assigned_office, academic_program_codes, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?);
STAFF_UPDATE = Update staff set user_code = ?, program_graduated = ?, job_role = ?, assigned_office = ?, academic_program_codes = ?, updated_by = ?, updated_timestamp = ? where id = ?;
STAFF_DELETE = Delete from staff where id = ?;
STAFF_ADD_PROFILE_PICT = insert into laponhcet_media.user (user.code, user.profile_pict, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?);
STAFF_UPDATE_PROFILE_PICT  = Update from laponhcet_media.user set user.profile_pict = ? where code = ?;
STAFF_DELETE_PROFILE_PICT  = Delete from laponhcet_media.user where code = ?;
STAFF_LAST_CODE = Select * from staff order by user_code desc limit 1;
STAFF_BY_CODE = Select id, user_code, program_graduated, job_role, assigned_office, academic_program_codes from staff where user_code = ?;
STAFF_LIST = Select id, user_code, program_graduated, job_role, assigned_office, academic_program_codes from staff;

STUDENT_ADD = Insert into student (user_code ,learner_reference_number ,academic_program_code ,skills ,elementary_school_code_completed_at ,elementary_school_graduated_year ,junior_high_school_code_completed_at ,junior_high_school_graduated_year ,senior_high_school_code_completed_at ,senior_high_school_graduated_year ,vocational_school_code_completed_at ,vocational_school_graduated_year ,college_school_code_completed_at ,college_school_graduated_year ,graduate_school_code_completed_at ,graduate_school_graduated_year ,school_code_last_attended_at ,school_last_attended_year ,highest_educational_attainment ,highest_educational_attainment_major ,entrance_credentials ,added_by ,added_timestamp ,updated_by ,updated_timestamp) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
STUDENT_UPDATE = Update student set user_code=? ,learner_reference_number=? ,academic_program_code=? ,skills=? ,elementary_school_code_completed_at=? ,elementary_school_graduated_year=? ,junior_high_school_code_completed_at=? ,junior_high_school_graduated_year=? ,senior_high_school_code_completed_at=? ,senior_high_school_graduated_year=? ,vocational_school_code_completed_at=? ,vocational_school_graduated_year=? ,college_school_code_completed_at=? ,college_school_graduated_year=? ,graduate_school_code_completed_at=? ,graduate_school_graduated_year=? ,school_code_last_attended_at=? ,school_last_attended_year=? ,highest_educational_attainment=? ,highest_educational_attainment_major=? ,entrance_credentials=? ,updated_by=? ,updated_timestamp=? where id = ?;
STUDENT_DELETE = Delete from student where id = ?;
STUDENT_LIST = Select id, user_code ,learner_reference_number ,academic_program_code ,skills ,elementary_school_code_completed_at ,elementary_school_graduated_year ,junior_high_school_code_completed_at ,junior_high_school_graduated_year ,senior_high_school_code_completed_at ,senior_high_school_graduated_year ,vocational_school_code_completed_at ,vocational_school_graduated_year ,college_school_code_completed_at ,college_school_graduated_year ,graduate_school_code_completed_at ,graduate_school_graduated_year ,school_code_last_attended_at ,school_last_attended_year ,highest_educational_attainment ,highest_educational_attainment_major ,entrance_credentials ,added_by ,added_timestamp ,updated_by ,updated_timestamp from student order by user_code asc;
STUDENT_LAST = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials, added_by, added_timestamp, updated_by ,updated_timestamp from student order by added_timestamp desc limit 1;
STUDENT_LIST_SEARCHBY_ACADEMICPROGRAMCODE = Select id, user_code, learner_reference_number, academic_program_code, skills, elementary_school_code_completed_at, elementary_school_graduated_year, junior_high_school_code_completed_at, junior_high_school_graduated_year, senior_high_school_code_completed_at, senior_high_school_graduated_year, vocational_school_code_completed_at, vocational_school_graduated_year, college_school_code_completed_at, college_school_graduated_year, graduate_school_code_completed_at, graduate_school_graduated_year, school_code_last_attended_at, school_last_attended_year, highest_educational_attainment, highest_educational_attainment_major, entrance_credentials, added_by, added_timestamp, updated_by ,updated_timestamp from student where academic_program_code like ? order by user_code asc;
STUDENT_BY_CODE = Select id, user_code ,learner_reference_number ,academic_program_code ,skills ,elementary_school_code_completed_at ,elementary_school_graduated_year ,junior_high_school_code_completed_at ,junior_high_school_graduated_year ,senior_high_school_code_completed_at ,senior_high_school_graduated_year ,vocational_school_code_completed_at ,vocational_school_graduated_year ,college_school_code_completed_at ,college_school_graduated_year ,graduate_school_code_completed_at ,graduate_school_graduated_year ,school_code_last_attended_at ,school_last_attended_year ,highest_educational_attainment ,highest_educational_attainment_major ,entrance_credentials ,added_by ,added_timestamp ,updated_by ,updated_timestamp from student where user_code = ? order by user_code asc;
STUDENT_ADD_PROFILE_PICT = insert into laponhcet_media.user (user.code, user.profile_pict, user.added_by, user.added_timestamp, user.updated_by, user.updated_timestamp) values (?, ?, ?, ?, ?, ?);
STUDENT_UPDATE_PROFILE_PICT  = Update from laponhcet_media.user set user.profile_pict = ? where code = ?;
STUDENT_DELETE_PROFILE_PICT  = Delete from laponhcet_media.user where code = ?;
STUDENT_PROFILE_PICT_BY_CODE = Select * from laponhcet_media.user where code = ?;

SUPPLIER_ADD = Insert into supplier (code, term_days, remark, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?);
SUPPLIER_UPDATE = Update supplier set term_days = ?, remark = ?, updated_by = ?, updated_timestamp = ? where id = ?;
SUPPLIER_DELETE = Delete from supplier where id = ?;
SUPPLIER_LAST_CODE = Select id, code, term_days, remark from supplier order by code desc limit 1;
SUPPLIER_BY_CODE = Select id, code, term_days, remark from supplier where code = ?;
SUPPLIER_LIST = Select id, code, term_days, remark from supplier;
SUPPLIER_LIST_SEARCHBY_CODENAME = Select id, code, term_days, remark from supplier where code like ? or last_name like ? or first_name like ? or middle_name like ?;

TEACHER_ADD = Insert into teacher (user_code, program_graduated, academic_program_codes, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?);
TEACHER_ADD_PROFILE_PICT = Insert into laponhcet_media.user (code, profile_pict, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?);
TEACHER_UPDATE = Update teacher set program_graduated = ?, academic_program_codes = ?, updated_by = ?, updated_timestamp = ? where id = ?;
TEACHER_UPDATE_PROFILE_PICT Update laponhcet_media.user set profile_pict = ?, updated_by = ?, updated_timestamp = ? where id = ?;
TEACHER_DELETE = Delete from teacher where id = ?;
TEACHER_DELETE_PROFILE_PICT = Delete from laponhcet_media.user where id = ?;
TEACHER_LAST_CODE = Select id, user_code, program_graduated, academic_program_codes from teacher order by user_code desc limit 1;
TEACHER_BY_CODE = Select id, user_code, program_graduated, academic_program_codes from teacher where user_code = ?;
TEACHER_LIST = Select id, user_code, program_graduated, academic_program_codes from teacher;


ACADEMIC_PROGRAM_ADD = Insert into academic_program (code, academic_program_group_code, academic_program_subgroup_code, name, major, description, graduation_year_level, academic_term, head_user_code, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
ACADEMIC_PROGRAM_UPDATE = Update academic_program set academic_program_group_code = ?, academic_program_subgroup_code = ?, name = ?, major = ?, description = ?, graduation_year_level = ?, academic_term = ?, head_user_code = ? = ?, updated_by = ?, updated_timestamp = ? where id = ?;
ACADEMIC_PROGRAM_DELETE = Delete from academic_program where id = ?;
ACADEMIC_PROGRAM_LAST_CODE = Select id, code, academic_program_group_code, academic_program_subgroup_code, name, major, description, graduation_year_level, academic_term, head_user_code from academic_program order by name desc limit 1;
ACADEMIC_PROGRAM_BY_CODE = Select id, code, academic_program_group_code, academic_program_subgroup_code, name, major, description, graduation_year_level, academic_term, head_user_code from academic_program where code = ?;
ACADEMIC_PROGRAM_BY_NAME = Select id, code, academic_program_group_code, academic_program_subgroup_code, name, major, description, graduation_year_level, academic_term, head_user_code from academic_program where name = ?;
ACADEMIC_PROGRAM_LIST = Select id, code, academic_program_group_code, academic_program_subgroup_code, name, major, description, graduation_year_level, head_user_code, logo from academic_program order by code;
ACADEMIC_PROGRAM_LIST_UNIQUENAME = Select distinct name, academic_graduation_year_level from academic_program order by code;
ACADEMIC_PROGRAM_LIST_SEARCHBYCODENAME = Select id, code, academic_program_group_code, academic_program_subgroup_code, name, major, description, graduation_year_level, head_user_code, academic_term from academic_program where code like ? or name like ? order by code;

ACADEMIC_PROGRAM_GROUP_LIST = Select id, code, name from academic_program_group order by name;
ACADEMIC_PROGRAM_GROUP_BY_CODE = Select id, code, name from academic_program_group where code = ?;

ACADEMIC_PROGRAM_SUBGROUP_LIST = Select id, code, name from academic_program_subgroup order by name;
ACADEMIC_PROGRAM_SUBGROUP_BY_CODE = Select id, code, name from academic_program_subgroup where code = ?;


COURSE_GROUP_ADD = Insert into course_group (code, name, description, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?);
COURSE_GROUP_UPDATE = Update course_group set code = ?, name = ?, description = ?, updated_by = ?, updated_timestamp = ? where id = ?;
COURSE_GROUP_DELETE = Delete from course_group where id = ?;
COURSE_GROUP_BY_CODE = Select id, code, name, description from course_group where code = ?;
COURSE_GROUP_BY_NAME = Select id, code, name, description from course_group where  name = ? order by name limit 1;
COURSE_GROUP_LIST = Select id, code, name, description from course_group order by name;
COURSE_GROUP_LAST = Select id, code, name, description from course_group order by code desc limit 1;
COURSE_GROUP_LIST_SEARCHBY_NAMEDESCRIPTION = Select id, code, name, description from course_group where name like ? or description like ? order by name;

CUSTOMER_ADD = Insert into customer (code, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?,);
CUSTOMER_DELETE = Delete from customer where id = ?;
CUSTOMER_UPDATE = Update customer set updated_by = ?, updated_timestamp = ? where id = ?;
CUSTOMER_LAST_CODE = Select id, code from customer order by code desc limit 1;
CUSTOMER_BY_CODE = Select id, code where code = ?;
CUSTOMER_LIST = Select id, code from customer;

DISCOUNT_STUDENT_SPECIFIC_ADD = Insert into discount_student_specific (code, academic_year_code, semester_code, student_code, discount_type_code, amount, remark, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
DISCOUNT_STUDENT_SPECIFIC_UPDATE = Update discount_student_specificdiscount set discount_type_code = ?, amount = ?, remark = ?, updated_by = ?, updated_timestamp = ? where id = ?;
DISCOUNT_STUDENT_SPECIFIC_DELETE = Delete from discount_student_specific where id = ?;
DISCOUNT_STUDENT_SPECIFIC_BY_SEMESTERCODESTUDENTCODE = Select id, code, academic_year_code, semester_code, student_code, discount_type_code, amount, remark from discount_student_specific where semester_code = ? and student_code = ?;
DISCOUNT_STUDENT_SPECIFIC_BY_ACADEMICYEARCODESTUDENTCODE = Select id, code, academic_year_code, semester_code, student_code, discount_type_code, amount, remark from discount_student_specific where academic_year_code = ? and student_code = ?;
DISCOUNT_STUDENT_SPECIFIC_LIST = Select id, code, academic_year_code, semester_code, student_code, discount_type_code, amount, remark from discount_student_specific order by student_code;
DISCOUNT_STUDENT_SPECIFIC_LIST_BY_STUDENTCODE = Select id, code, academic_year_code, semester_code, student_code, discount_type_code, amount, remark from discount_student_specific where student_code = ?;
DISCOUNT_STUDENT_SPECIFIC_LIST_BY_DISCOUNT_TYPE_CODE = Select id, code, academic_year_code, semester_code, student_code, discount_type_code, amount, remark from discount_student_specific where discount_type_code = ?;

DISCOUNT_TYPE_ADD = Insert into discount_type (code, academic_year_code, semester_code, name, is_percentage, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?);
DISCOUNT_TYPE_UPDATE = Update discount_type set academic_year_code = ?, semester_code = ?, name = ?, is_percentage = ?, updated_by = ?, updated_timestamp = ? where id = ?;
DISCOUNT_TYPE_DELETE = Delete from discount_type where id = ?;
DISCOUNT_TYPE_LAST = Select id, code, academic_year_code, semester_code, name, is_percentage, added_by, added_timestamp, updated_by, updated_timestamp from discount_type order by code desc limit 1;
DISCOUNT_TYPE_LIST = Select id, code, academic_year_code, semester_code, name, is_percentage, added_by, added_timestamp, updated_by, updated_timestamp from discount_type order by code;
DISCOUNT_TYPE_BY_NAME = Select id, code, academic_year_code, semester_code, name, is_percentage, added_by, added_timestamp, updated_by, updated_timestamp from discount_type where name = ?;
DISCOUNT_TYPE_BY_CODE = Select id, code, academic_year_code, semester_code, name, is_percentage, added_by, added_timestamp, updated_by, updated_timestamp from discount_type where code = ?;
DISCOUNT_TYPE_LIST_SEARCHBY_NAME = Select id, code, academic_year_code, semester_code, name, is_percentage from discount_type where name like ? order by code;

DISCOUNT_TYPE_PERCENTAGE_ADD = Insert into discount_type_percentage (discount_type_code, fee_code, percent, academic_year_code, semester_code) values (?, ?, ?, ?, ?); 
DISCOUNT_TYPE_PERCENTAGE_UPDATE = Update discount_type_percentage set percent = ? where id = ?; 
DISCOUNT_TYPE_PERCENTAGE_DELETE = Delete from discount_type_percentage where id = ?; 
DISCOUNT_TYPE_PERCENTAGE_LIST = Select id, discount_type_code, fee_code, percent, academic_year_code, semester_code from discount_type_percentage;

ENROLLMENT_LIST_BY_SEMESTERCODESECTIONCODE = Select id, code, student_code, academic_year_code, semester_code, year_level, section_code, status, update_key, added_timestamp from enrollment where semester_code = ? and section_code = ? order by id desc;
ENROLLMENT_LIST_BY_ACADEMICYEARCODESECTIONCODE = Select id, code, student_code, academic_year_code, semester_code, year_level, section_code, status, update_key, added_timestamp from enrollment where academic_year_code = ? and section_code = ? order by id desc;

EVENT_ADD = Insert into event (code, description, start, end, venue, speaker, status, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
EVENT_UPDATE = Update event set description = ?, start = ?, end = ?, venue = ?, speaker = ?, status = ?,  updated_by = ?, updated_timestamp = ? where id = ?;
EVENT_DELETE = Delete from event where id = ?;
EVENT_LIST = Select id, code, description, start, end, venue, speaker, status from event order by added_timestamp desc;
EVENT_LAST_CODE = Select code from event order by code desc limit 1;

EVENT_PARTICIPANT_ADD = Insert into event_participant (event_code, user_code,  remarks, added_by, added_timestamp, updated_by, updated_timestamp) values (?,?,?,?,?,?,?);
EVENT_PARTICIPANT_BY_USERCODE = Select from event_participant where user_code = ?;

FACE_LOG_ADD = Insert into face_log (code, user_code, rfid, time_log, pict, is_in, location, is_process) values (?, ?, ?, ?, ?, ?, ?, ?);
FACE_LOG_UPDATE = Update face_log set is_process = ? where id = ?;
FACE_LOG_DELETE_BY_TIMELOGNOTCURRENTDATE = Delete from face_log where date(time_log)<>?;
FACE_LOG_LATEST_BY_RFID = Select id, code, user_code, rfid, time_log, pict, is_in, location, is_process from face_log where rfid = ? order by time_log desc;
FACE_LOG_LIST_BY_TIMELOGFROMANDTIMELOGTO = Select id, code, user_code, rfid, time_log, pict, is_in, location, is_process from face_log where date(time_log) >= ? and date(time_log) <= ?;
FACE_LOG_LIST_ISPROCESSLIMIT = Select id, code, user_code, rfid, time_log, pict, is_in, location, is_process from face_log where is_process = ? order by id limit ?;


FEE_PROGRAM_SPECIFIC_ADD = Insert into fee_program_specific(code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee, added_by, added_timestamp, updated_by, updated_timestamp) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
FEE_PROGRAM_SPECIFIC_UPDATE = Update fee_program_specific set enrollment_status_continuing = ?, enrollment_status_cross_enrollee = ?, enrollment_status_new = ?, enrollment_status_returnee = ?, enrollment_status_shiftee = ?, enrollment_status_transferee = ?, updated_by = ?, updated_timestamp = ? where id = ?;
FEE_PROGRAM_SPECIFIC_DELETE = Delete from fee_program_specific where id = ?;
FEE_PROGRAM_SPECIFIC_LAST = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific order by code desc limit 1;
FEE_PROGRAM_SPECIFIC_BY_FEECODESEMESTERCODEACADEMICPROGRAMCODEYEARLEVEL = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific where fee_code = ? and semester_code = ? and academic_program_code = ? and year_level = ?;
FEE_PROGRAM_SPECIFIC_BY_FEECODEACADEMICYEARCODEACADEMICPROGRAMCODEYEARLEVEL= Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific where fee_code = ? and academic_year_code = ? and academic_program_code = ? and year_level = ?;
FEE_PROGRAM_SPECIFIC_BY_ACADEMICPROGRAMCODE = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific where program_code = ?;
FEE_PROGRAM_SPECIFIC_LIST = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific order by code;
FEE_PROGRAM_SPECIFIC_LIST_BY_FEECODE = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific where fee_code = ?;
FEE_PROGRAM_SPECIFIC_LIST_BY_SEMESTERCODE = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific where semester_code = ?;
FEE_PROGRAM_SPECIFIC_LIST_BY_SEMESTERCODEACADEMICPROGRAMCODEYEARLEVEL = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific where semester_code = ? and academic_program_code = ? and year_level = ?;
FEE_PROGRAM_SPECIFIC_LIST_BY_ACADEMICYEARCODE = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific where academic_year_code = ?;
FEE_PROGRAM_SPECIFIC_LIST_BY_ACADEMICYEARCODEACADEMICPROGRAMCODEYEARLEVEL = Select id, code, academic_year_code, semester_code, program_code, year_level, fee_code, enrollment_status_continuing, enrollment_status_cross_enrollee, enrollment_status_new, enrollment_status_returnee, enrollment_status_shiftee, enrollment_status_transferee from fee_program_specific where academic_year_code = ? and academic_program_code = ? and year_level = ?;

MERCHANDISE_ADD = Insert into merchandise (code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
MERCHANDISE_UPDATE = Update merchandise set code = ?, name = ?, location = ?, beginning_balance = ?, qty_on_stock = ?, unit_code = ?, unit_price = ?, costing_method = ?, nrv = ?, qty_reorder = ?, supplier_code = ?, updated_by = ?, updated_timestamp = ? where id = ?;
MERCHANDISE_DELETE = Delete from merchandise where id = ?;
MERCHANDISE_LAST_CODE = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise order by code desc limit 1;
MERCHANDISE_BY_CODE = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise where code = ?;
MERCHANDISE_BY_RFID = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise where code = ?;
MERCHANDISE_BY_UNIT_CODE = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise where unit_code = ?;
MERCHANDISE_BY_NAME = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise where name = ?;
MERCHANDISE_LIST = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise order by name;
MERCHANDISE_LIST_BY_UNIT_CODE = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise where unit_code =?;
MERCHANDISE_LIST_SEARCHBY_CODENAME = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise where code like ? or name like ? order by name;
MERCHANDISE_LIST_BY_SUPPLIER_CODE = Select id, code, name, location, beginning_balance, qty_on_stock, unit_code, unit_price, costing_method, nrv, qty_reorder, supplier_code from merchandise where supplier_code = ?;

MERCHANDISE_SALE_ADD = Insert into merchandise_sale (code, merchandise_transaction_code, customer_code, discount, added_by, added_timestamp) values (?, ?, ?, ?, ?, ?);
MERCHANDISE_SALE_LAST_CODE = Select id, code, merchandise_transaction_code, customer_code, discount from merchandise_sale order by code desc limit 1;
MERCHANDISE_SALE_BY_CODE = Select id, code, merchandise_transaction_code, customer_code, discount where code = ?;
MERCHANDISE_SALE_LIST = Select id, code, merchandise_transaction_code, customer_code, discount from merchandise_sale;
MERCHANDISE_SALE_LIST_SEARCHBY_CODENAME = Select id, code, merchandise_transaction_code, customer_code, discount from merchandise_sale where code like ? or name like ? order by name;

MERCHANDISE_TRANSACTION_ADD = Insert into merchandise_transaction (code, date, merchandise_transaction_type_code, remarks, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?);
MERCHANDISE_TRANSACTION_UPDATE = Update merchandise_transaction set code=?, date=?, merchandise_transaction_type_code=?, remarks=?, updated_by=?, updated_timestamp=? where code = ?;
MERCHANDISE_TRANSACTION_DELETE = Delete from merchandise_transaction where code = ?;
MERCHANDISE_TRANSACTION_LAST_CODE = Select id, code, date, merchandise_transaction_type_code, remarks from merchandise_transaction order by code desc limit 1;
MERCHANDISE_TRANSACTION_BY_CODE = Select id, code, date, merchandise_transaction_type_code, remarks from merchandise_transaction where code = ?;
MERCHANDISE_TRANSACTION_LIST = Select id, code, date, merchandise_transaction_type_code, remarks from merchandise_transaction;
MERCHANDISE_TRANSACTION_LIST_BY_MERCHANDISETRANSACTIONTYPECODE = Select id, code, date, merchandise_transaction_type_code, remarks from merchandise_transaction where merchandise_transaction_type_code = ?;
MERCHANDISE_TRANSACTION_LIST_SEARCHBY_CODE = Select id, code, date, merchandise_transaction_type_code, remarks from merchandise_transaction where code like ?;

MERCHANDISE_TRANSACTION_DETAILS_ADD = Insert into merchandise_transaction_details (merchandise_transaction_code, merchandise_code, qty, remarks) values (?,?,?,?);
MERCHANDISE_TRANSACTION_DETAILS_DELETE_BY_MERCHANDISETRANSACTIONCODE = Delete from merchandise_transaction_details where merchandise_transaction_code = ?;
MERCHANDISE_TRANSACTION_DETAILS_LIST_BY_MERCHANDISECODE = Select id, merchandise_transaction_code, merchandise_code, qty, remarks from merchandise_transaction_details where merchandise_code = ?;
MERCHANDISE_TRANSACTION_DETAILS_LIST_BY_MERCHANDISETRANSACTIONCODE = Select id, merchandise_transaction_code, merchandise_code, qty, remarks from merchandise_transaction_details where merchandise_transaction_code = ?;

MERCHANDISE_TRANSACTION_TYPE_ADD = Insert into  merchandise_transaction_type (code, name, name_short, is_in, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?);
MERCHANDISE_TRANSACTION_TYPE_UPDATE = Update  merchandise_transaction_type set name = ?, name_short = ?, is_in = ?, updated_by = ?, updated_timestamp = ? where id = ?;
MERCHANDISE_TRANSACTION_TYPE_DELETE = Delete from merchandise_transaction_type where id = ?;
MERCHANDISE_TRANSACTION_TYPE_LAST_CODE = Select id, code, name, name_short, is_in from  merchandise_transaction_type order by code desc limit 1;
MERCHANDISE_TRANSACTION_TYPE_BY_CODE = Select id, code, name, name_short, is_in from  merchandise_transaction_type where code = ?;
MERCHANDISE_TRANSACTION_TYPE_BY_NAME = Select id, code, name, name_short, is_in from  merchandise_transaction_type where name = ?;
MERCHANDISE_TRANSACTION_TYPE_LIST = Select id, code, name, name_short, is_in from  merchandise_transaction_type order by name;
MERCHANDISE_TRANSACTION_TYPE_LIST_SEARCHBY_CODENAME = Select id, code, name, name_short, is_in from  merchandise_transaction_type where code like ? or name like ? order by name;
MERCHANDISE_TRANSACTION_TYPE_LIST_TRANSFER = Select id, code, name, name_short, is_in from  merchandise_transaction_type where name = "TRANSFER-IN" or name = "TRANSFER-OUT";

MESSAGE_ADD = Insert into message (code, content, priority, valid_timestamp_start, valid_timestamp_end, message_type_codes, content_sms, content_web_headline, content_face_keeper, added_by, added_timestamp, updated_by, updated_timestamp) values (?,?,?,?,?,?,?,?,?,?,?,?,?);
MESSAGE_UPDATE = Update message set code = ?, content = ?, priority = ?, valid_timestamp_start = ?, valid_timestamp_end = ?, message_type_codes = ?, updated_by = ?, updated_timestamp = ? where id = ?;
MESSAGE_DELETE = Delete from message where id = ?;
MESSAGE_BY_CODE = Select id, code, content, priority, valid_timestamp_start, valid_timestamp_end, message_type_codes, content_sms, content_web_headline, content_face_keeper, added_by, added_timestamp from message where code = ?;
MESSAGE_LIST = Select id, code, content, priority, valid_timestamp_start, valid_timestamp_end, message_type_codes, content_sms, content_web_headline, content_face_keeper, added_by, added_timestamp from message order by added_timestamp desc;
MESSAGE_LIST_SEARCHBY_TYPE = Select id, code, content, priority, valid_timestamp_start, valid_timestamp_end, message_type_codes, content_sms, content_web_headline, content_face_keeper, added_by, added_timestamp from message where message_type_codes like ? order by added_timestamp desc;
MESSAGE_LIST_SEARCHBY_CONTENT = Select id, code, content, priority, valid_timestamp_start, valid_timestamp_end, message_type_codes, content_sms, content_web_headline, content_face_keeper, added_by, added_timestamp from message where content like ? order by added_timestamp desc;
MESSAGE_BY_MESSAGETYPECODECONTENT = Select id, code, content, priority, valid_timestamp_start, valid_timestamp_end, message_type_codes, content_sms, content_web_headline, content_face_keeper, added_by, added_timestamp from message where message_type_codes = ? and content = ? order by added_timestamp desc limit 1;

MESSAGE_TYPE_ADD = Insert into message_type (code, description, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?);
MESSAGE_TYPE_UPDATE = Update message_type set code = ?, description = ?, updated_by = ?, updated_timestamp = ? where id = ?;
MESSAGE_TYPE_DELETE = Delete from message_type where id = ?;
MESSAGE_TYPE_BY_CODE = Select id, code, description from message_type where code = ?;
MESSAGE_TYPE_BY_DESCRIPTION = Select id, code, description from message_type where description = ?;
MESSAGE_TYPE_LIST = Select id, code, description from message_type order by code;
MESSAGE_TYPE_LAST = Select id, code, description from message_type order by code desc limit 1;
MESSAGE_TYPE_LIST_SEARCHBY_DESCRIPTION = Select id, code, description from message_type where description like ? order by code;

MESSAGE_SMS_ADD = Insert into message_sms (message_code, cp_number, message, priority, group_num, is_sent) values (?,?,?,?,?,?);
MESSAGE_SMS_UPDATE = Update message_sms set message_code = ?, cp_number = ?, message = ?, priority = ?, group_num = ?, is_sent = ?where id = ?;
MESSAGE_SMS_DELETE = Delete from message_sms where id =?;
MESSAGE_SMS_BY_CODE = Select id, message_code, cp_number, message, priority, group_num, is_sent from message_sms where code = ?;
MESSAGE_SMS_LIST = Select id, message_code, cp_number, message, priority, group_num, is_sent from message_sms order by message_code desc;

MESSAGE_INDIVIDUAL_ADD = Insert into message_individual (message_code, user_code, is_seen, added_by, added_timestamp, updated_by, updated_timestamp) values (?,?,?,?,?,?,?,?,?);
MESSAGE_INDIVIDUAL_UPDATE = Update message_individual set message_code = ?, user_code =? , is_seen = ?, updated_by = ?, updated_timestamp = ? where id = ?;
MESSAGE_INDIVIDUAL_DELETE = Delete from message_individual where id =?;
MESSAGE_INDIVIDUAL_BY_CODE = Select id, message_code, user_code, is_seen, from message_individual where code = ?;
MESSAGE_INDIVIDUAL_LIST = Select id, message_code, user_code, is_seen, added_by, added_timestamp, updated_by, updated_timestamp from message_individual order by added_timestamp desc;

REGISTER_ADD = Insert into register (user_code, prefix_name, last_name, first_name, middle_name, suffix_name, gender, birth_date, cp_number, email_address, institution_connected_with, occupation,  status, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
REGISTER_UPDATE = Update register set prefix_name = ?, last_name = ?, first_name = ?, middle_name = ?, suffix_name = ?, gender = ?, birth_date = ?, cp_number = ?, email_address = ?, institution_connected_with = ?, occupation = ?,  status = ?, updated_by = ?, updated_timestamp = ? where id = ?;
REGISTER_UPDATE_STATUS = Update register set status = ?, updated_by = ?, updated_timestamp = ? where id = ?;
REGISTER_DELETE = Delete from register where id = ?;
REGISTER_BY_NAME = Select id, user_code, prefix_name, last_name, first_name, middle_name, suffix_name, gender, birth_date, cp_number, email_address, institution_connected_with, occupation, status from register where last_name = ? and first_name = ? and middle_name = ?;
REGISTER_LIST = Select id, user_code, prefix_name, last_name, first_name, middle_name, suffix_name, gender, birth_date, cp_number, email_address, institution_connected_with, occupation, status from register order by added_timestamp desc;
REGISTER_LIST_SEARCHBY_NAME = Select id, user_code, prefix_name, last_name, first_name, middle_name, suffix_name, gender, birth_date, cp_number, email_address, institution_connected_with, occupation, status from register where last_name like ? or first_name like ? or middle_name like ? order by added_timestamp desc;
REGISTER_LIST_SEARCHBY_INSTITUTION = Select id, user_code, prefix_name, last_name, first_name, middle_name, suffix_name, gender, birth_date, cp_number, email_address, institution_connected_with, occupation, status from register where institution_connected_with like ? order by added_timestamp desc;
REGISTER_LAST_CODE = Select * from register order by user_code desc limit 1;


SMS_OUTBOX_ADD = Insert into sms_outbox (sms_inbox_code, cp_number, message, priority, group_num, is_sent, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

MESSAGE_SMS_ADD = Insert into message_sms (message_code, cp_number, message, priority, group_num, is_sent, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
MESSAGE_SMS_UPDATE = Update message_sms set is_sent = ?, updated_by = ?, updated_timestamp = ? where id = ?;
MESSAGE_SMS_DELETE_BY_ISSENT = Delete from message_sms where is_sent = ?;
MESSAGE_SMS_LIST_BY_ISSENTLIMIT = Select id, message_code, cp_number, message, priority, group_num, is_sent from message_sms where is_sent = ? order by priority limit ?;

SUPPLIER_ADD = Insert into supplier (code, term_days, remark, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?);
SUPPLIER_UPDATE = Update supplier set term_days = ?, remark = ?, updated_by = ?, updated_timestamp = ? where id = ?;
SUPPLIER_DELETE = Delete from supplier where id = ?;
SUPPLIER_LAST_CODE = Select id, code, term_days, remark from supplier order by code desc limit 1;
SUPPLIER_BY_CODE = Select id, code, term_days, remark from supplier where code = ?;
SUPPLIER_LIST = Select id, code, term_days, remark from supplier;
SUPPLIER_LIST_SEARCHBY_CODENAME = Select id, code, term_days, remark from supplier where code like ?;

UNIT_ADD = Insert into unit (code, name, added_by, added_timestamp, updated_by, updated_timestamp) values (?,?,?,?,?,?);
UNIT_UPDATE = Update unit set name = ?, updated_by = ?, updated_timestamp = ? where id = ?;
UNIT_DELETE = Delete from unit where id = ?;
UNIT_LAST_CODE = Select id, code, name from unit order by code desc limit 1;
UNIT_BY_CODE = Select id, code, name from unit where code = ?;
UNIT_BY_NAME = Select id, code, name from unit where name = ?;
UNIT_LIST = Select id, code, name from unit;
UNIT_LIST_SEARCHBY_CODENAME = Select id, code, name from unit where code like ? or name like ?;


VENUE_ADD = Insert into venue (code, name, location, academic_program_codes, concurrent_session, max_pax, column_count, row_column, added_by, added_timestamp, updated_by, updated_timestamp) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
VENUE_UPDATE = Update venue set name = ?, location = ?, academic_program_codes = ?, concurrent_session = ?, max_pax = ?, column_count = ?, row_column = ?, updated_by = ?, updated_timestamp = ? where id = ?;
VENUE_DELETE = Delete from venue where id = ?;
VENUE_LAST_CODE = Select id, code, name, location, academic_program_codes, concurrent_session, max_pax, column_count, row_column from venue order by code desc limit 1;
VENUE_BY_CODE = Select id, code, name, location, academic_program_codes, concurrent_session, max_pax, column_count, row_column from venue where code = ?;
VENUE_BY_NAME = Select id, code, name, location, academic_program_codes, concurrent_session, max_pax, column_count, row_column from venue where name = ?;
VENUE_BY_NAMELOCATION = Select id, code, name, location, academic_program_codes, concurrent_session, max_pax, column_count, row_column from venue where name = ? and location = ?;
VENUE_LIST = Select id, code, name, location, academic_program_codes, concurrent_session, max_pax, column_count, row_column from venue;
VENUE_LIST_SEARCHBY_NAME = Select id, code, name, location, academic_program_codes, concurrent_session, max_pax, column_count, row_column from venue where name like ? order by name;
VENUE_LIST_SEARCHBY_LOCATION = Select id, code, name, location, academic_program_codes, concurrent_session, max_pax, column_count, row_column from venue where location like ? order by location;